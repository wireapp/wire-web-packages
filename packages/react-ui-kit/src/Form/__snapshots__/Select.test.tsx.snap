// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"Select" renders 1`] = `
.emotion-0 {
  background: #edeff0;
  -webkit-transition: background 0.15s;
  transition: background 0.15s;
}

.emotion-1 {
  margin-bottom: 20px;
  width: 100%;
}

.emotion-1:focus-within label {
  color: #0667c8;
}

.emotion-2>div>div[class$="-Control"] {
  background: #fff;
  border: none;
  border-radius: 12px;
  box-shadow: 0 0 0 1px #dce0e3;
  caret-color: #0667c8;
  color: rgb(29, 30, 31);
  font-weight: 400;
  height: 48px;
  line-height: 1.5rem;
  outline: none;
  padding: 0 16px;
  width: 100%;
  min-height: 48px;
  cursor: pointer;
}

.emotion-2>div>div[class$="-Control"]::-moz-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
  opacity: 1;
}

.emotion-2>div>div[class$="-Control"]::-ms-input-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
}

.emotion-2>div>div[class$="-Control"]::-webkit-input-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
}

.emotion-2>div>div[class$="-Control"]:hover {
  box-shadow: 0 0 0 1px var(--text-input-border-hover);
}

.emotion-2>div>div[class$="-Control"]:focus-visible,
.emotion-2>div>div[class$="-Control"]:focus,
.emotion-2>div>div[class$="-Control"]:active {
  box-shadow: 0 0 0 1px #0667c8;
}

.emotion-2>div>div[class$="-Control"]:invalid:not(:focus, :hover) {
  box-shadow: 0 0 0 1px #dce0e3;
}

.emotion-2>div>div[class$="-Control"]:focus:visible,
.emotion-2>div>div[class$="-Control"] active {
  box-shadow: 0 0 0 1px #0667c8;
}

.emotion-2>div {
  padding: 0;
  height: auto;
  min-height: 48px;
  position: relative;
}

.emotion-2>div:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}

.emotion-3 {
  z-index: 9999;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
  position: absolute;
  overflow: hidden;
  padding: 0;
  white-space: nowrap;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  padding: 0 8px 0 16px;
  height: auto;
  min-height: 48px;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: grid;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  padding: 0;
  box-sizing: border-box;
  width: 100%;
}

.emotion-7 {
  grid-area: 1/1/2/3;
  color: hsl(0, 0%, 50%);
  margin-left: 2px;
  margin-right: 2px;
  box-sizing: border-box;
}

.emotion-8 {
  background: 0;
  border: 0;
  caret-color: transparent;
  font-size: inherit;
  grid-area: 1/1/2/3;
  outline: 0;
  padding: 0;
  width: 1px;
  color: transparent;
  left: -100px;
  opacity: 0;
  position: relative;
  -webkit-transform: scale(.01);
  -moz-transform: scale(.01);
  -ms-transform: scale(.01);
  transform: scale(.01);
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-10 {
  display: none;
}

.emotion-11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  color: hsl(0, 0%, 80%);
  padding: 8px;
  box-sizing: border-box;
}

.emotion-11:hover {
  color: hsl(0, 0%, 60%);
}

.emotion-12 {
  fill: rgb(29, 30, 31);
  overflow: visible;
  margin-top: 4px;
}

<div
  className="emotion-0"
>
  <div
    autoFocus={false}
    className="emotion-1"
    data-uie-name="test"
  >
    <div
      className=" emotion-2"
      id="test"
      onKeyDown={[Function]}
    >
      <div
        tabIndex={0}
      >
        <span
          className="emotion-3"
          id="react-select-2-live-region"
        />
        <span
          aria-atomic="false"
          aria-live="polite"
          aria-relevant="additions text"
          className="emotion-3"
        />
        <div
          className=" emotion-5"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <div
            className=" emotion-6"
          >
            <div
              className=" emotion-7"
              id="react-select-2-placeholder"
            >
              Select...
            </div>
             
            <input
              aria-autocomplete="list"
              aria-describedby="react-select-2-placeholder"
              aria-expanded={false}
              aria-haspopup={true}
              aria-readonly={true}
              className="emotion-8"
              disabled={false}
              id="react-select-2-input"
              inputMode="none"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              role="combobox"
              tabIndex={-1}
              value=""
            />
          </div>
          <div
            className=" emotion-9"
          >
            <span
              className=" emotion-10"
            />
            <div
              aria-hidden="true"
              className=" emotion-11"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                className="emotion-12"
                height={16}
                viewBox="0 0 16 16"
                width={16}
              >
                <g>
                  <path
                    d="M7.99963 12.5711L15.6565 4.91421L14.2423 3.5L7.99963 9.74264L1.75699 3.5L0.342773 4.91421L7.99963 12.5711Z"
                  />
                </g>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`"Select" renders as disabled 1`] = `
.emotion-0 {
  background: #edeff0;
  -webkit-transition: background 0.15s;
  transition: background 0.15s;
}

.emotion-1 {
  margin-bottom: 20px;
  width: 100%;
}

.emotion-1:focus-within label {
  color: #0667c8;
}

.emotion-2>div>div[class$="-Control"] {
  background: #edeff0;
  border: none;
  border-radius: 12px;
  box-shadow: 0 0 0 1px #dce0e3;
  caret-color: #0667c8;
  color: #676b71;
  font-weight: 400;
  height: 48px;
  line-height: 1.5rem;
  outline: none;
  padding: 0 16px;
  width: 100%;
  min-height: 48px;
  background-color: #edeff0;
}

.emotion-2>div>div[class$="-Control"]::-moz-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
  opacity: 1;
}

.emotion-2>div>div[class$="-Control"]::-ms-input-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
}

.emotion-2>div>div[class$="-Control"]::-webkit-input-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
}

.emotion-2>div>div[class$="-Control"]:focus-visible,
.emotion-2>div>div[class$="-Control"]:focus,
.emotion-2>div>div[class$="-Control"]:active {
  box-shadow: 0 0 0 1px #0667c8;
}

.emotion-2>div>div[class$="-Control"]:invalid:not(:focus, :hover) {
  box-shadow: 0 0 0 1px #dce0e3;
}

.emotion-2>div {
  padding: 0;
  height: auto;
  min-height: 48px;
  position: relative;
}

.emotion-2>div:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}

.emotion-3 {
  z-index: 9999;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
  position: absolute;
  overflow: hidden;
  padding: 0;
  white-space: nowrap;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  padding: 0 8px 0 16px;
  height: auto;
  min-height: 48px;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: grid;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  padding: 0;
  box-sizing: border-box;
  width: 100%;
}

.emotion-7 {
  grid-area: 1/1/2/3;
  color: hsl(0, 0%, 50%);
  margin-left: 2px;
  margin-right: 2px;
  box-sizing: border-box;
}

.emotion-8 {
  background: 0;
  border: 0;
  caret-color: transparent;
  font-size: inherit;
  grid-area: 1/1/2/3;
  outline: 0;
  padding: 0;
  width: 1px;
  color: transparent;
  left: -100px;
  opacity: 0;
  position: relative;
  -webkit-transform: scale(.01);
  -moz-transform: scale(.01);
  -ms-transform: scale(.01);
  transform: scale(.01);
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-10 {
  display: none;
}

.emotion-11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  color: hsl(0, 0%, 80%);
  padding: 8px;
  box-sizing: border-box;
}

.emotion-11:hover {
  color: hsl(0, 0%, 60%);
}

.emotion-11>svg {
  fill: rgb(80, 82, 84);
}

.emotion-12 {
  fill: rgb(29, 30, 31);
  overflow: visible;
  margin-top: 4px;
}

<div
  className="emotion-0"
>
  <div
    autoFocus={false}
    className="emotion-1"
    data-uie-name="test"
  >
    <div
      className=" emotion-2"
      id="test"
      onKeyDown={[Function]}
    >
      <div
        tabIndex={0}
      >
        <span
          className="emotion-3"
          id="react-select-3-live-region"
        />
        <span
          aria-atomic="false"
          aria-live="polite"
          aria-relevant="additions text"
          className="emotion-3"
        />
        <div
          aria-disabled={true}
          className=" emotion-5"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <div
            className=" emotion-6"
          >
            <div
              className=" emotion-7"
              id="react-select-3-placeholder"
            >
              Select...
            </div>
             
            <input
              aria-autocomplete="list"
              aria-describedby="react-select-3-placeholder"
              aria-expanded={false}
              aria-haspopup={true}
              aria-readonly={true}
              className="emotion-8"
              disabled={true}
              id="react-select-3-input"
              inputMode="none"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              role="combobox"
              tabIndex={-1}
              value=""
            />
          </div>
          <div
            className=" emotion-9"
          >
            <span
              className=" emotion-10"
            />
            <div
              aria-hidden="true"
              className=" emotion-11"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                className="emotion-12"
                height={16}
                viewBox="0 0 16 16"
                width={16}
              >
                <g>
                  <path
                    d="M7.99963 12.5711L15.6565 4.91421L14.2423 3.5L7.99963 9.74264L1.75699 3.5L0.342773 4.91421L7.99963 12.5711Z"
                  />
                </g>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`"Select" renders as invalid 1`] = `
.emotion-0 {
  background: #edeff0;
  -webkit-transition: background 0.15s;
  transition: background 0.15s;
}

.emotion-1 {
  margin-bottom: 2px;
  width: 100%;
}

.emotion-1:focus-within label {
  color: #0667c8;
}

.emotion-2>div>div[class$="-Control"] {
  background: #fff;
  border: none;
  border-radius: 12px;
  box-shadow: 0 0 0 1px #c20013;
  caret-color: #0667c8;
  color: rgb(29, 30, 31);
  font-weight: 400;
  height: 48px;
  line-height: 1.5rem;
  outline: none;
  padding: 0 16px;
  width: 100%;
  min-height: 48px;
  cursor: pointer;
}

.emotion-2>div>div[class$="-Control"]::-moz-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
  opacity: 1;
}

.emotion-2>div>div[class$="-Control"]::-ms-input-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
}

.emotion-2>div>div[class$="-Control"]::-webkit-input-placeholder {
  color: rgb(80, 82, 84);
  font-size: 1rem;
  text-transform: none;
}

.emotion-2>div>div[class$="-Control"]:hover {
  box-shadow: 0 0 0 1px var(--text-input-border-hover);
}

.emotion-2>div>div[class$="-Control"]:focus-visible,
.emotion-2>div>div[class$="-Control"]:focus,
.emotion-2>div>div[class$="-Control"]:active {
  box-shadow: 0 0 0 1px #0667c8;
}

.emotion-2>div>div[class$="-Control"]:focus:visible,
.emotion-2>div>div[class$="-Control"] active {
  box-shadow: 0 0 0 1px #0667c8;
}

.emotion-2>div {
  padding: 0;
  height: auto;
  min-height: 48px;
  position: relative;
}

.emotion-2>div:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}

.emotion-3 {
  z-index: 9999;
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
  position: absolute;
  overflow: hidden;
  padding: 0;
  white-space: nowrap;
}

.emotion-5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  appearance: none;
  padding: 0 8px 0 16px;
  height: auto;
  min-height: 48px;
}

.emotion-6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: grid;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-box-flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-overflow-scrolling: touch;
  position: relative;
  overflow: hidden;
  padding: 0;
  box-sizing: border-box;
  width: 100%;
}

.emotion-7 {
  grid-area: 1/1/2/3;
  color: hsl(0, 0%, 50%);
  margin-left: 2px;
  margin-right: 2px;
  box-sizing: border-box;
}

.emotion-8 {
  background: 0;
  border: 0;
  caret-color: transparent;
  font-size: inherit;
  grid-area: 1/1/2/3;
  outline: 0;
  padding: 0;
  width: 1px;
  color: transparent;
  left: -100px;
  opacity: 0;
  position: relative;
  -webkit-transform: scale(.01);
  -moz-transform: scale(.01);
  -ms-transform: scale(.01);
  transform: scale(.01);
}

.emotion-9 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: stretch;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  box-sizing: border-box;
}

.emotion-10 {
  display: none;
}

.emotion-11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transition: color 150ms;
  transition: color 150ms;
  color: hsl(0, 0%, 80%);
  padding: 8px;
  box-sizing: border-box;
}

.emotion-11:hover {
  color: hsl(0, 0%, 60%);
}

.emotion-12 {
  fill: rgb(29, 30, 31);
  overflow: visible;
  margin-top: 4px;
}

<div
  className="emotion-0"
>
  <div
    autoFocus={false}
    className="emotion-1"
    data-uie-name="test"
  >
    <div
      className=" emotion-2"
      id="test"
      onKeyDown={[Function]}
    >
      <div
        tabIndex={0}
      >
        <span
          className="emotion-3"
          id="react-select-4-live-region"
        />
        <span
          aria-atomic="false"
          aria-live="polite"
          aria-relevant="additions text"
          className="emotion-3"
        />
        <div
          className=" emotion-5"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
        >
          <div
            className=" emotion-6"
          >
            <div
              className=" emotion-7"
              id="react-select-4-placeholder"
            >
              Select...
            </div>
             
            <input
              aria-autocomplete="list"
              aria-describedby="react-select-4-placeholder"
              aria-expanded={false}
              aria-haspopup={true}
              aria-readonly={true}
              className="emotion-8"
              disabled={false}
              id="react-select-4-input"
              inputMode="none"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              role="combobox"
              tabIndex={-1}
              value=""
            />
          </div>
          <div
            className=" emotion-9"
          >
            <span
              className=" emotion-10"
            />
            <div
              aria-hidden="true"
              className=" emotion-11"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
            >
              <svg
                className="emotion-12"
                height={16}
                viewBox="0 0 16 16"
                width={16}
              >
                <g>
                  <path
                    d="M7.99963 12.5711L15.6565 4.91421L14.2423 3.5L7.99963 9.74264L1.75699 3.5L0.342773 4.91421L7.99963 12.5711Z"
                  />
                </g>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
