#!/usr/bin/env node

/* eslint-disable no-magic-numbers */

const { exec } = require('child_process');
const { promisify } = require('util');

const { TravisBot } = require('../dist/');
const scriptName = require('path').basename(process.argv[1]);

const requiredEnvVars = ['WIRE_WEBAPP_BOT_EMAIL', 'WIRE_WEBAPP_BOT_PASSWORD'];
const travisEnvVars = ['TRAVIS_BRANCH', 'TRAVIS_BUILD_NUMBER', 'TRAVIS_COMMIT', 'TRAVIS_REPO_SLUG'];

const envVarUsage = `Required environment variables: ${requiredEnvVars.join(', ')}`;
const usage = `Usage: ${scriptName} <author> <summary>`;



if (process.argv[2] && process.argv[2].replace(/-/g, '') === 'help') {
  console.info(usage);
  console.info(envVarUsage);
  process.exit(0);
}

travisEnvVars.forEach(envVar => {
  if (!process.env[envVar]) {
    console.error(`Error: Travis environment variable "${envVar}" is not set.\nRead more: https://docs.travis-ci.com/user/environment-variables/#Default-Environment-Variables`);
    process.exit(1);
  }
});

requiredEnvVars.forEach(envVar => {
  if (!process.env[envVar]) {
    console.error(`Error: Environment variable "${envVar}" is not set.`);
    console.info(envVarUsage);
    process.exit(1);
  }
});

(async () => {
  try {
    const commitAuthor = await promisify(exec)(`git log | grep Author: | cut -d' ' -f2- | uniq | head -n1`).then(({ stdout }) => stdout.trim());
    let commitSummary = await promisify(exec)('git log -1 --pretty=%s').then(({ stdout }) => stdout.trim());

    if (process.env.TRAVIS_TAG) {
      const previousGitTag = await promisify(exec)(`git describe --abbrev=0 --tags ${process.env.TRAVIS_TAG}^`).then(({ stdout }) => stdout.trim());

      const changelog = await generateChangelog({
        repoUrl: `https://github.com/${process.env.TRAVIS_REPO_SLUG}`,
        tag: `${previousGitTag}..${process.env.TRAVIS_TAG}`,
      }).then(changelog => changelog.substring(0, 800));

      commitSummary += '\n\n' + changelog;
    }

    const login = {
      email: process.env.WIRE_WEBAPP_BOT_EMAIL,
      password: process.env.WIRE_WEBAPP_BOT_PASSWORD,
      persist: false,
    };

    const commit = {
      author: commitAuthor,
      branch: process.env.TRAVIS_BRANCH,
      hash: process.env.TRAVIS_COMMIT,
      message: commitSummary,
    };

    const build = {
      repositoryName: process.env.TRAVIS_REPO_SLUG,
      number: process.env.TRAVIS_BUILD_NUMBER,
      url: '',
    };

    conversationIds =
      process.env.WIRE_WEBAPP_BOT_CONVERSATION_IDS
        ? process.env.WIRE_WEBAPP_BOT_CONVERSATION_IDS.split(',')
        : undefined;

    const messageData = {
      build,
      commit,
      conversationIds,
    };

    const bot = new TravisBot(login, messageData);
    await bot.start();

  } catch (error) {
    console.error('Error:', error);
    process.exit(1);
  }
})();
